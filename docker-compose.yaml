version: "3.9"

services:
  
  backend:
    container_name: go-academic-tracker
    image: go-academic-tracker
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_NAME: ${DB_NAME}
        USER: ${USER}
        PASSWORD: ${PASSWORD}
        HOST: ${HOST}
        DB_PORT: ${DB_PORT}
        BINARY: ${BINARY}
      environment:
        - DSN=${DSN}
        - PORT=${PORT}
        - DB_DOCKER_CONTAINER=${DB_DOCKER_CONTAINER}
        - DB_NAME=${DB_NAME}
        - USER=${USER}
        - PASSWORD=${PASSWORD}
        - HOST=${HOST}
        - DB_PORT=${DB_PORT}
        - BINARY=${BINARY}
        - FIREBASE_TYPE=${FIREBASE_TYPE}
        - FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
        - FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
        - FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
        - FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
        - FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
        - FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
        - FIREBASE_TOKEN_URI=${FIREBASE_TOKEN_URI}
        - FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
        - FIREBASE_CLIENT_X509_CERT_URL=${FIREBASE_CLIENT_X509_CERT_UR}
        - FIREBASE_UNIVERSE_DOMAIN=${FIREBASE_UNIVERSE_DOMAIN}  
    depends_on:
      - db
    ports:
      - 8080:8080
    #command: ./wait-for-it.sh db:5432 && migrate -path=migrations -database="postgres://${USER}:${PASSWORD}@${HOST}:${DB_PORT}/${DB_NAME}?sslmode=disable" -verbose up && ./${BINARY}

  db:
    container_name: academic_tracker_db_container
    image: postgres:12-alpine
    restart: always
    environment:
      POSTGRES_USER: ${USER}
      POSTGRES_PASSWORD: ${PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - 5432:${DB_PORT}
    volumes:
      - pgdata:/var/lib/postgresql/data

volumes:
  pgdata: {}